
import com.sun.jna.platform.win32.Advapi32Util;
import static com.sun.jna.platform.win32.WinReg.HKEY_LOCAL_MACHINE;
import java.io.File;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.management.ManagementFactory;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Vector;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sivagnanam
 */
public class monitor extends javax.swing.JFrame {

    /**
     * Creates new form monitor
     */
    public monitor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MONITOR");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(310, 0, 84, 27);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(23, 65, 300, 150);

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("Dusting One of the key tenets\nand security features of \ncryptocurrency is anonymity.\n Anonymity helps to keep \ncryptocurrency users safe from \nhackers that target them through\n their email address, phone number or physical address. Dusting is a subversive method used by attackers to try and trick people into ‘deanonymizing’ their crypto wallets.  How it works  A hacker will typically send a small amount of cryptocurrency (dust) to the target’s wallet. In many cases, the target may not even realise that they have received anything because the amount is so small it goes unnoticed. However, this transaction gives the hacker an address to track that could eventually deanonymize the user.   In practice, a hacker would send tiny amounts of BTC to a wide range of wallet addresses and then track the activity of those addresses on the blockchain. By tracking and combining the movement of funds between multiple wallets, the hacker may be able to figure out the identity of a user via a connection to their bank, company or exchange.");
        jTextArea2.setToolTipText("");
        jScrollPane2.setViewportView(jTextArea2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(340, 70, 920, 150);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Money Transaction");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(106, 45, 160, 20);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Malicious Node Detection");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(467, 45, 160, 20);

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(20, 290, 390, 60);

        jButton2.setText("USER PROFILE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(500, 300, 190, 60);

        jButton3.setText("reconstruct");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(820, 290, 160, 70);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background.jpg"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 1280, 430);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        subservconfig();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTextArea1.append("\ncpu=>security reconstructed\n");
    }//GEN-LAST:event_jButton3ActionPerformed

    
    
    
    
    
    ////////////////////////////// start user prof 
    
    
     public void subservconfig()
    {
    try
    {
        String ip = InetAddress. getLocalHost()+"" ;
        
        String rmemory = ((((com.sun.management.OperatingSystemMXBean) ManagementFactory
        .getOperatingSystemMXBean()).getTotalPhysicalMemorySize())/1024)/1024+"" ;
        String total_memory = ((((new File("/").getTotalSpace())/1024)/1024)/1024)+"" ;
        String proc = Advapi32Util.registryGetStringValue
             (HKEY_LOCAL_MACHINE,
                "HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0\\",
              "ProcessorNameString");
        
         jTextArea1.append("\ncpu=>"+proc+"\n");
       jTextArea1.append("\nip=>"+ip+"\nram memory=>"+rmemory+"\n");
       jTextArea1.append("total memmory=>"+total_memory);
        
        
        System.out.println(ip);
        
    }
    catch(Exception e)
    {
    System.out.println("config excep->"+e);
    }
    
    }
    /////////////////////////////  end user prof
    
    
    
    
    
    
    
    ////////////////////server start
 
    
      Socket s;
    
    
  ServerSocket ss;
      
    public void sstart()
    {
       
     
         try{
       
             
             
             
             
      ss =new ServerSocket(5001);
        String data;
         System.out.println("listening");
         
         while(true)
         {
              s=ss.accept();

       
         
	ObjectInputStream inn=new ObjectInputStream(s.getInputStream());
   Vector   b=(Vector)inn.readObject();
   
      System.out.println("the received values is"+b);
     String str1 = b.get(1).toString();
     
     
					System.out.println("the data is"+str1);
     
     
      jTextArea1.append("\n"+str1);
         
         
     if(str1.equals("close"))
     {
         this.setVisible(false);
     }
         
     ObjectOutputStream dis=new ObjectOutputStream(s.getOutputStream());
     dis.writeObject("ack");
   
         }
        }
        catch(Exception e)
        {
           System.out.println(e); 
        }
    }
   
    
    
    
    




///////////////////server end
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        monitor m=  new monitor();
               m.setVisible(true);
               m.sstart();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
